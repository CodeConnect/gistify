using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Octokit;

namespace CodeConnect.Gistify.Extension.ThirdParties
{
    class GitHubConnection
    {
        GitHubClient _currentClient;

        public GitHubConnection()
        {
            /*
            string password = Microsoft.Win32.Registry.GetValue("HKEY_CURRENT_USER", "gitPassword", "invalid").ToString();
            var credentials = new Credentials("git@amadeusw.com", password);

            var connection = new Connection(new ProductHeaderValue("Whatever"))
            {
                Credentials = credentials
            };
            _currentClient = new GitHubClient(connection);
            */
        }

        public async Task<string> CreateGist(string contents)
        {
            try
            {
                /*
                var newGist = new NewGist()
                {
                    Description = "Generated by Gistify for Visual Studio",
                    Public = false,
                };
                newGist.Files.Add("fragment.cs", contents);

                var gist = _currentClient.Gist.Create(newGist).Result; // await doesn't work https://github.com/octokit/octokit.net/issues/853
                return gist.HtmlUrl;
                */
                string password = Microsoft.Win32.Registry.GetValue("HKEY_CURRENT_USER", "gitPassword", "invalid").ToString();
                var credentials = new Octokit.Credentials("git@amadeusw.com", password);

                var connection = new Connection(new ProductHeaderValue("Whatever"))
                {
                    Credentials = credentials
                };
                var github = new GitHubClient(connection);
                var newGist = new NewGist()
                {
                    Description = "Generated by SnippetVS",
                    Public = false,
                };
                newGist.Files.Add("fragment.cs", contents);
                var gist = await github.Gist.Create(newGist).ConfigureAwait(false);
                return gist.HtmlUrl;
            }
            catch (Exception)
            {
                StatusBar.ShowStatus("Gistify ran into a problem creating the gist.");
                return String.Empty;
            }
        }
    }
}
